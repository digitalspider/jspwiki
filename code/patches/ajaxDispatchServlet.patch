Index: jspwiki-war/src/main/java/org/apache/wiki/rpc/json/JSONRPCManager.java
===================================================================
--- jspwiki-war/src/main/java/org/apache/wiki/rpc/json/JSONRPCManager.java	(revision 1622810)
+++ jspwiki-war/src/main/java/org/apache/wiki/rpc/json/JSONRPCManager.java	(working copy)
@@ -147,7 +147,7 @@
         
         getBridge(context).registerObject(id, c);
         requestJSON(context);
-        
+
         return id;
     }
 
@@ -157,7 +157,7 @@
      * @param context The WikiContext.
      */
     public static void requestJSON(WikiContext context) {
-    
+
         /* Deprecated.
            All json stuff is in jspwiki-common.js; not need to inject jsonrpc.js
         TemplateManager.addResourceRequest(context,
@@ -210,18 +210,19 @@
 
                 WikiEngine e = WikiEngine.getInstance(req.getSession().getServletContext(), null);
 
+                boolean global = false;
                 for (Iterator i = c_globalObjects.values().iterator(); i.hasNext(); ) {
                     CallbackContainer cc = (CallbackContainer) i.next();
 
                     if (cc.m_object == instance) {
+                        global = true;
                         canDo = e.getAuthorizationManager().checkPermission(WikiSession.getWikiSession(e, req),
                                 cc.m_permission);
-
                         break;
                     }
                 }
 
-                if (canDo) {
+                if ((global && canDo) || !global) {
                     return;
                 }
             }
Index: jspwiki-war/src/main/scripts/jspwiki-common.js
===================================================================
--- jspwiki-war/src/main/scripts/jspwiki-common.js	(revision 1622810)
+++ jspwiki-war/src/main/scripts/jspwiki-common.js	(working copy)
@@ -219,7 +219,67 @@
 	}
 }
 
+/** AJAX Requests as per http://javapapers.com/ajax/getting-started-with-ajax-using-java/ **/
+/*
+ * creates a new XMLHttpRequest object which is the backbone of AJAX,
+ * or returns false if the browser doesn't support it
+ */
+function getXMLHttpRequest() {
+	var xmlHttpReq = false;
+	// to create XMLHttpRequest object in non-Microsoft browsers
+	if (window.XMLHttpRequest) {
+		xmlHttpReq = new XMLHttpRequest();
+	} else if (window.ActiveXObject) {
+		try {
+			// to create XMLHttpRequest object in later versions
+			// of Internet Explorer
+			xmlHttpReq = new ActiveXObject("Msxml2.XMLHTTP");
+		} catch (exp1) {
+			try {
+				// to create XMLHttpRequest object in older versions
+				// of Internet Explorer
+				xmlHttpReq = new ActiveXObject("Microsoft.XMLHTTP");
+			} catch (exp2) {
+				xmlHttpReq = false;
+			}
+		}
+	}
+	return xmlHttpReq;
+}
 
+/*
+ * AJAX call starts with this function
+ */
+function makeRequest(method,url,responseId,loading) {
+	var xmlHttpRequest = getXMLHttpRequest();
+	xmlHttpRequest.onreadystatechange = getReadyStateHandler(xmlHttpRequest,responseId,loading);
+	xmlHttpRequest.open(method, url, true);
+	xmlHttpRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
+	xmlHttpRequest.send(null);
+}
+
+/*
+ * Returns a function that waits for the state change in XMLHttpRequest
+ */
+function getReadyStateHandler(xmlHttpRequest,responseId,loading) {
+	// an anonymous function returned
+	// it listens to the XMLHttpRequest instance
+	return function() {
+		if (xmlHttpRequest.readyState >=1 && xmlHttpRequest.readyState <4) {
+			document.getElementById(responseId).innerHTML = loading;
+		}
+		if (xmlHttpRequest.readyState == 4) {
+			if (xmlHttpRequest.status == 200) {
+				document.getElementById(responseId).innerHTML = xmlHttpRequest.responseText;
+			} else {
+				document.getElementById(responseId).innerHTML("HTTP error " + xmlHttpRequest.status + ": " + xmlHttpRequest.statusText);
+			}
+		}
+	};
+}
+/** End AJAX Requests **/
+
+
 /** 100 Wiki functions **/
 var Wiki = {
 
@@ -414,6 +474,12 @@
 
 	$jsonid : 10000,
 	jsonrpc: function(method, params, fn) {
+		$$('meta').each(function(el){
+			var n = el.getProperty('name') || '';
+			if( n.indexOf('wiki') == 0 ) this[n.substr(4)] = el.getProperty('content');
+		},this);
+
+		if (Wiki.JsonUrl) {
 		new Ajax( Wiki.JsonUrl, {
 			postBody: Json.toString({"id":Wiki.$jsonid++, "method":method, "params":params}),
 			method: 'post',
@@ -425,6 +491,7 @@
 				}
 			}
 		}).request();
+		}
 	}
 }
 
Index: jspwiki-war/src/main/scripts/wiki/Wiki.js
===================================================================
--- jspwiki-war/src/main/scripts/wiki/Wiki.js	(revision 1622810)
+++ jspwiki-war/src/main/scripts/wiki/Wiki.js	(working copy)
@@ -437,9 +437,12 @@
     */
     jsonid : 1e4, //seed
     jsonrpc: function(method, params, callback){
+		$$('meta').each(function(el){
+			var n = el.getProperty('name') || '';
+			if( n.indexOf('wiki') == 0 ) this[n.substr(4)] = el.getProperty('content');
+		},this);
 
-        if(this.JsonUrl){
-
+		if (this.JsonUrl) {
             new Request.JSON({
                 url: this.JsonUrl,
                 data: JSON.encode({ 
@@ -458,7 +461,6 @@
                     callback(null);
                 }
             }).send();
-
         }
     }
 
Index: jspwiki-war/src/main/webapp/WEB-INF/web.xml
===================================================================
--- jspwiki-war/src/main/webapp/WEB-INF/web.xml	(revision 1622810)
+++ jspwiki-war/src/main/webapp/WEB-INF/web.xml	(working copy)
@@ -141,6 +141,13 @@
        <load-on-startup>1</load-on-startup>
    </servlet>
 
+    <!-- WikiAjaxDispatcherServlet -->
+    <servlet>
+        <servlet-name>WikiAjaxDispatcherServlet</servlet-name>
+        <servlet-class>org.apache.wiki.WikiAjaxDispatcherServlet</servlet-class>
+        <load-on-startup>1</load-on-startup>
+    </servlet>
+
    <!--
        Attachment exchange handler.
      -->
@@ -159,7 +166,12 @@
        <servlet-name>WikiServlet</servlet-name>
        <url-pattern>/wiki/*</url-pattern>
    </servlet-mapping>
-   
+
+    <servlet-mapping>
+        <servlet-name>WikiAjaxDispatcherServlet</servlet-name>
+        <url-pattern>/ajax/*</url-pattern>
+    </servlet-mapping>
+
    <servlet-mapping>
        <servlet-name>com.metaparadigm.jsonrpc.JSONRPCServlet</servlet-name>
        <url-pattern>/JSON-RPC</url-pattern>
